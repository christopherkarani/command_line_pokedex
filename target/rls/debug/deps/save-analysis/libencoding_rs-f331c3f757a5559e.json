{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51],"program":"/Users/apples/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","encoding_rs","/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=f331c3f757a5559e","-C","extra-filename=-f331c3f757a5559e","--out-dir","/Users/apples/Desktop/command_line_pokedex/target/rls/debug/deps","-L","dependency=/Users/apples/Desktop/command_line_pokedex/target/rls/debug/deps","--extern","cfg_if=/Users/apples/Desktop/command_line_pokedex/target/rls/debug/deps/libcfg_if-e8e97bc9e174be9b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/apples/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,68,101,115,107,116,111,112,47,99,111,109,109,97,110,100,95,108,105,110,101,95,112,111,107,101,100,101,120,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,101,110,99,111,100,105,110,103,95,114,115,45,102,51,51,49,99,51,102,55,53,55,97,53,53,53,57,101,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"encoding_rs","disambiguator":[17643659580529335683,2390825649153723009]},"crate_root":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src","external_crates":[{"file_name":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4389547861531967874,4087000726966765083]}},{"file_name":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11032240498842541725,2432057140917246171]}},{"file_name":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1895553238457761685,16857640017500260029]}},{"file_name":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[15832230302727928541,9588802089311960002]}},{"file_name":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","num":5,"id":{"name":"libc","disambiguator":[6716647803596312003,10833435238760970833]}},{"file_name":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","num":6,"id":{"name":"unwind","disambiguator":[4365380295245643280,9464345992969757060]}},{"file_name":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","num":7,"id":{"name":"panic_unwind","disambiguator":[6158679394116410202,17211381475699568518]}},{"file_name":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15380939019595587561,9352304411777145648]}}],"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":424,"byte_end":233131,"line_start":10,"line_end":5692,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":424,"byte_end":233131,"line_start":10,"line_end":5692,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":40},{"krate":0,"index":76},{"krate":0,"index":122},{"krate":0,"index":166},{"krate":0,"index":216},{"krate":0,"index":264},{"krate":0,"index":286},{"krate":0,"index":326},{"krate":0,"index":368},{"krate":0,"index":390},{"krate":0,"index":442},{"krate":0,"index":474},{"krate":0,"index":518},{"krate":0,"index":684},{"krate":0,"index":1108},{"krate":0,"index":1172},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1504},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1514},{"krate":0,"index":1766},{"krate":0,"index":1778},{"krate":0,"index":1774},{"krate":0,"index":1772},{"krate":0,"index":1768},{"krate":0,"index":1782},{"krate":0,"index":1790},{"krate":0,"index":1788},{"krate":0,"index":1784},{"krate":0,"index":1794},{"krate":0,"index":1804},{"krate":0,"index":1800},{"krate":0,"index":1796},{"krate":0,"index":1808},{"krate":0,"index":1820},{"krate":0,"index":1814},{"krate":0,"index":1810},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1844},{"krate":0,"index":1856},{"krate":0,"index":1850},{"krate":0,"index":1846},{"krate":0,"index":1544},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602}],"decl_id":null,"docs":" encoding_rs is a Gecko-oriented Free Software / Open Source implementation\n of the [Encoding Standard](https://encoding.spec.whatwg.org/) in Rust.\n Gecko-oriented means that converting to and from UTF-16 is supported in\n addition to converting to and from UTF-8, that the performance and\n streamability goals are browser-oriented, and that FFI-friendliness is a\n goal.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1172},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mem","qualname":"::mem","value":"/Users/apples/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.13/src/mem.rs","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1748},{"krate":0,"index":1744},{"krate":0,"index":1740},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1752},{"krate":0,"index":1202},{"krate":0,"index":1760},{"krate":0,"index":1204},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1270}],"decl_id":null,"docs":" Functions for converting between different in-RAM representations of text\n and for quickly checking if the Unicode Bidirectional Algorithm can be\n avoided.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":815},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3285385,"byte_end":3285391,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"Latin1","qualname":"::mem::Latin1Bidi::Latin1","value":"Latin1Bidi::Latin1","parent":{"krate":0,"index":1738},"children":[],"decl_id":null,"docs":" Every character is below U+0100.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":819},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3285517,"byte_end":3285528,"line_start":63,"line_end":63,"column_start":5,"column_end":16},"name":"LeftToRight","qualname":"::mem::Latin1Bidi::LeftToRight","value":"Latin1Bidi::LeftToRight","parent":{"krate":0,"index":1738},"children":[],"decl_id":null,"docs":" There is at least one character that's U+0100 or higher, but there\n are no right-to-left characters.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3285593,"byte_end":3285597,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Bidi","qualname":"::mem::Latin1Bidi::Bidi","value":"Latin1Bidi::Bidi","parent":{"krate":0,"index":1738},"children":[],"decl_id":null,"docs":" There is at least one right-to-left character.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1738},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3285327,"byte_end":3285337,"line_start":58,"line_end":58,"column_start":10,"column_end":20},"name":"Latin1Bidi","qualname":"::mem::Latin1Bidi","value":"Latin1Bidi::{Latin1, LeftToRight, Bidi}","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":819},{"krate":0,"index":823}],"decl_id":null,"docs":" Classification of text as Latin1 (all code points are below U+0100),\n left-to-right with some non-Latin1 characters or as containing at least\n some right-to-left characters.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3285263,"byte_end":3285274,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"repr(C)","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3285307,"byte_end":3285317,"line_start":57,"line_end":57,"column_start":1,"column_end":11}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3285318,"byte_end":3285604,"line_start":58,"line_end":66,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":1206},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3309587,"byte_end":3309595,"line_start":630,"line_end":630,"column_start":8,"column_end":16},"name":"is_ascii","qualname":"::mem::is_ascii","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-ASCII.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3309570,"byte_end":3309579,"line_start":629,"line_end":629,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1208},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3309889,"byte_end":3309903,"line_start":640,"line_end":640,"column_start":8,"column_end":22},"name":"is_basic_latin","qualname":"::mem::is_basic_latin","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-Basic Latin (i.e. UTF-16 representing\n only ASCII characters).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3309872,"byte_end":3309881,"line_start":639,"line_end":639,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3310229,"byte_end":3310243,"line_start":650,"line_end":650,"column_start":8,"column_end":22},"name":"is_utf8_latin1","qualname":"::mem::is_utf8_latin1","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is valid UTF-8 representing only code points\n less than or equal to U+00FF.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3310212,"byte_end":3310221,"line_start":649,"line_end":649,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1212},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3310540,"byte_end":3310553,"line_start":660,"line_end":660,"column_start":8,"column_end":21},"name":"is_str_latin1","qualname":"::mem::is_str_latin1","value":"fn (buffer: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code point less than or equal\n to U+00FF.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3310523,"byte_end":3310532,"line_start":659,"line_end":659,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1214},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3310850,"byte_end":3310865,"line_start":670,"line_end":670,"column_start":8,"column_end":23},"name":"is_utf16_latin1","qualname":"::mem::is_utf16_latin1","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code point less than or equal\n to U+00FF.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3310833,"byte_end":3310842,"line_start":669,"line_end":669,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1216},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3311993,"byte_end":3312005,"line_start":695,"line_end":695,"column_start":8,"column_end":20},"name":"is_utf8_bidi","qualname":"::mem::is_utf8_bidi","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially-invalid UTF-8 buffer contains code points\n that trigger right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3311976,"byte_end":3311985,"line_start":694,"line_end":694,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1218},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3330985,"byte_end":3330996,"line_start":1115,"line_end":1115,"column_start":8,"column_end":19},"name":"is_str_bidi","qualname":"::mem::is_str_bidi","value":"fn (buffer: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3330968,"byte_end":3330977,"line_start":1114,"line_end":1114,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3337782,"byte_end":3337795,"line_start":1275,"line_end":1275,"column_start":8,"column_end":21},"name":"is_utf16_bidi","qualname":"::mem::is_utf16_bidi","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3337765,"byte_end":3337774,"line_start":1274,"line_end":1274,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1222},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3338607,"byte_end":3338619,"line_start":1291,"line_end":1291,"column_start":8,"column_end":20},"name":"is_char_bidi","qualname":"::mem::is_char_bidi","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a code point triggers right-to-left processing.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3338582,"byte_end":3338599,"line_start":1290,"line_end":1290,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1224},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3341553,"byte_end":3341576,"line_start":1366,"line_end":1366,"column_start":8,"column_end":31},"name":"is_utf16_code_unit_bidi","qualname":"::mem::is_utf16_code_unit_bidi","value":"fn (u: u16) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 code unit triggers right-to-left processing.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3341528,"byte_end":3341545,"line_start":1365,"line_end":1365,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1226},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3342938,"byte_end":3342968,"line_start":1408,"line_end":1408,"column_start":8,"column_end":38},"name":"check_utf8_for_latin1_and_bidi","qualname":"::mem::check_utf8_for_latin1_and_bidi","value":"fn (buffer: &[u8]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3342921,"byte_end":3342930,"line_start":1407,"line_end":1407,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1228},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3343662,"byte_end":3343691,"line_start":1429,"line_end":1429,"column_start":8,"column_end":37},"name":"check_str_for_latin1_and_bidi","qualname":"::mem::check_str_for_latin1_and_bidi","value":"fn (buffer: &str) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3343645,"byte_end":3343654,"line_start":1428,"line_end":1428,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3344525,"byte_end":3344556,"line_start":1452,"line_end":1452,"column_start":8,"column_end":39},"name":"check_utf16_for_latin1_and_bidi","qualname":"::mem::check_utf16_for_latin1_and_bidi","value":"fn (buffer: &[u16]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-16 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3344508,"byte_end":3344517,"line_start":1451,"line_end":1451,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1232},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3345014,"byte_end":3345035,"line_start":1468,"line_end":1468,"column_start":8,"column_end":29},"name":"convert_utf8_to_utf16","qualname":"::mem::convert_utf8_to_utf16","value":"fn (src: &[u8], dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-8 to valid UTF-16 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3344997,"byte_end":3345006,"line_start":1467,"line_end":1467,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1234},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3346391,"byte_end":3346411,"line_start":1508,"line_end":1508,"column_start":8,"column_end":28},"name":"convert_str_to_utf16","qualname":"::mem::convert_str_to_utf16","value":"fn (src: &str, dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts valid UTF-8 to valid UTF-16.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3346374,"byte_end":3346383,"line_start":1507,"line_end":1507,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1236},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3350601,"byte_end":3350630,"line_start":1613,"line_end":1613,"column_start":8,"column_end":37},"name":"convert_utf16_to_utf8_partial","qualname":"::mem::convert_utf16_to_utf8_partial","value":"fn (src: &[u16], dst: &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER with potentially insufficient output\n space.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3350584,"byte_end":3350593,"line_start":1612,"line_end":1612,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1238},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3351595,"byte_end":3351616,"line_start":1639,"line_end":1639,"column_start":8,"column_end":29},"name":"convert_utf16_to_utf8","qualname":"::mem::convert_utf16_to_utf8","value":"fn (src: &[u16], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3351578,"byte_end":3351587,"line_start":1638,"line_end":1638,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3352494,"byte_end":3352522,"line_start":1660,"line_end":1660,"column_start":8,"column_end":36},"name":"convert_utf16_to_str_partial","qualname":"::mem::convert_utf16_to_str_partial","value":"fn (src: &[u16], dst: &mut str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER such that the validity of the output is\n signaled using the Rust type system with potentially insufficient output\n space.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3352477,"byte_end":3352486,"line_start":1659,"line_end":1659,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1242},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3353489,"byte_end":3353509,"line_start":1690,"line_end":1690,"column_start":8,"column_end":28},"name":"convert_utf16_to_str","qualname":"::mem::convert_utf16_to_str","value":"fn (src: &[u16], dst: &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER such that the validity of the output is\n signaled using the Rust type system.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3353472,"byte_end":3353481,"line_start":1689,"line_end":1689,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1244},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3354117,"byte_end":3354140,"line_start":1709,"line_end":1709,"column_start":8,"column_end":31},"name":"convert_latin1_to_utf16","qualname":"::mem::convert_latin1_to_utf16","value":"fn (src: &[u8], dst: &mut [u16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-16.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3354100,"byte_end":3354109,"line_start":1708,"line_end":1708,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1246},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3355188,"byte_end":3355218,"line_start":1737,"line_end":1737,"column_start":8,"column_end":38},"name":"convert_latin1_to_utf8_partial","qualname":"::mem::convert_latin1_to_utf8_partial","value":"fn (src: &[u8], dst: &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 with potentially insufficient\n output space.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3355171,"byte_end":3355180,"line_start":1736,"line_end":1736,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1248},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3357137,"byte_end":3357159,"line_start":1793,"line_end":1793,"column_start":8,"column_end":30},"name":"convert_latin1_to_utf8","qualname":"::mem::convert_latin1_to_utf8","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3357120,"byte_end":3357129,"line_start":1792,"line_end":1792,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1250},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3357859,"byte_end":3357888,"line_start":1812,"line_end":1812,"column_start":8,"column_end":37},"name":"convert_latin1_to_str_partial","qualname":"::mem::convert_latin1_to_str_partial","value":"fn (src: &[u8], dst: &mut str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the\n output is signaled using the Rust type system with potentially insufficient\n output space.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3357842,"byte_end":3357851,"line_start":1811,"line_end":1811,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3358856,"byte_end":3358877,"line_start":1842,"line_end":1842,"column_start":8,"column_end":29},"name":"convert_latin1_to_str","qualname":"::mem::convert_latin1_to_str","value":"fn (src: &[u8], dst: &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the\n output is signaled using the Rust type system.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3358839,"byte_end":3358848,"line_start":1841,"line_end":1841,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1254},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3360220,"byte_end":3360248,"line_start":1876,"line_end":1876,"column_start":8,"column_end":36},"name":"convert_utf8_to_latin1_lossy","qualname":"::mem::convert_utf8_to_latin1_lossy","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-8 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3360203,"byte_end":3360212,"line_start":1875,"line_end":1875,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1256},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3362459,"byte_end":3362488,"line_start":1939,"line_end":1939,"column_start":8,"column_end":37},"name":"convert_utf16_to_latin1_lossy","qualname":"::mem::convert_utf16_to_latin1_lossy","value":"fn (src: &[u16], dst: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-16 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3362442,"byte_end":3362451,"line_start":1938,"line_end":1938,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1258},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3362992,"byte_end":3363005,"line_start":1955,"line_end":1955,"column_start":8,"column_end":21},"name":"decode_latin1","qualname":"::mem::decode_latin1","value":"fn <'a> (bytes: &'a [u8]) -> Cow<'a, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1260},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3364512,"byte_end":3364531,"line_start":1989,"line_end":1989,"column_start":8,"column_end":27},"name":"encode_latin1_lossy","qualname":"::mem::encode_latin1_lossy","value":"fn <'a> (string: &'a str) -> Cow<'a, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-8 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1262},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3365325,"byte_end":3365342,"line_start":2012,"line_end":2012,"column_start":8,"column_end":25},"name":"utf16_valid_up_to","qualname":"::mem::utf16_valid_up_to","value":"fn (buffer: &[u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first unpaired surrogate or, if the input is\n valid UTF-16 in its entirety, the length of the input.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3365308,"byte_end":3365317,"line_start":2011,"line_end":2011,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1264},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3365503,"byte_end":3365524,"line_start":2018,"line_end":2018,"column_start":8,"column_end":29},"name":"ensure_utf16_validity","qualname":"::mem::ensure_utf16_validity","value":"fn (buffer: &mut [u16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces unpaired surrogates in the input with the REPLACEMENT CHARACTER.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3365486,"byte_end":3365495,"line_start":2017,"line_end":2017,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1266},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3366153,"byte_end":3366172,"line_start":2042,"line_end":2042,"column_start":8,"column_end":27},"name":"copy_ascii_to_ascii","qualname":"::mem::copy_ascii_to_ascii","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination up to the first non-ASCII byte\n (or the end of the input if it is ASCII in its entirety).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3366136,"byte_end":3366145,"line_start":2041,"line_end":2041,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1268},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3366915,"byte_end":3366940,"line_start":2069,"line_end":2069,"column_start":8,"column_end":33},"name":"copy_ascii_to_basic_latin","qualname":"::mem::copy_ascii_to_basic_latin","value":"fn (src: &[u8], dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination zero-extending it to UTF-16 up to\n the first non-ASCII byte (or the end of the input if it is ASCII in its\n entirety).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3366898,"byte_end":3366907,"line_start":2068,"line_end":2068,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1270},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3367706,"byte_end":3367731,"line_start":2096,"line_end":2096,"column_start":8,"column_end":33},"name":"copy_basic_latin_to_ascii","qualname":"::mem::copy_basic_latin_to_ascii","value":"fn (src: &[u16], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies Basic Latin from source to destination narrowing it to ASCII up to\n the first non-Basic Latin code unit (or the end of the input if it is\n Basic Latin in its entirety).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3367689,"byte_end":3367698,"line_start":2095,"line_end":2095,"column_start":1,"column_end":10}}]},{"kind":"Static","id":{"krate":0,"index":1292},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42626,"byte_end":42635,"line_start":770,"line_end":770,"column_start":12,"column_end":21},"name":"BIG5_INIT","qualname":"::BIG5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [Big5](static.BIG5.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1294},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":43825,"byte_end":43829,"line_start":798,"line_end":798,"column_start":12,"column_end":16},"name":"BIG5","qualname":"::BIG5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Big5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1296},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44456,"byte_end":44467,"line_start":812,"line_end":812,"column_start":12,"column_end":23},"name":"EUC_JP_INIT","qualname":"::EUC_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [EUC-JP](static.EUC_JP.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1298},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45443,"byte_end":45449,"line_start":836,"line_end":836,"column_start":12,"column_end":18},"name":"EUC_JP","qualname":"::EUC_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1300},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46078,"byte_end":46089,"line_start":850,"line_end":850,"column_start":12,"column_end":23},"name":"EUC_KR_INIT","qualname":"::EUC_KR_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [EUC-KR](static.EUC_KR.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1302},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47046,"byte_end":47052,"line_start":872,"line_end":872,"column_start":12,"column_end":18},"name":"EUC_KR","qualname":"::EUC_KR","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-KR encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1304},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47675,"byte_end":47683,"line_start":886,"line_end":886,"column_start":12,"column_end":20},"name":"GBK_INIT","qualname":"::GBK_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [GBK](static.GBK.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1306},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48968,"byte_end":48971,"line_start":914,"line_end":914,"column_start":12,"column_end":15},"name":"GBK","qualname":"::GBK","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The GBK encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1308},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":49597,"byte_end":49608,"line_start":928,"line_end":928,"column_start":12,"column_end":23},"name":"IBM866_INIT","qualname":"::IBM866_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [IBM866](static.IBM866.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1310},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":50399,"byte_end":50405,"line_start":948,"line_end":948,"column_start":12,"column_end":18},"name":"IBM866","qualname":"::IBM866","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The IBM866 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1312},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51044,"byte_end":51060,"line_start":962,"line_end":962,"column_start":12,"column_end":28},"name":"ISO_2022_JP_INIT","qualname":"::ISO_2022_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-2022-JP](static.ISO_2022_JP.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1314},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51957,"byte_end":51968,"line_start":984,"line_end":984,"column_start":12,"column_end":23},"name":"ISO_2022_JP","qualname":"::ISO_2022_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-2022-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1316},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":52612,"byte_end":52628,"line_start":998,"line_end":998,"column_start":12,"column_end":28},"name":"ISO_8859_10_INIT","qualname":"::ISO_8859_10_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-10](static.ISO_8859_10.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1318},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":53421,"byte_end":53432,"line_start":1018,"line_end":1018,"column_start":12,"column_end":23},"name":"ISO_8859_10","qualname":"::ISO_8859_10","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-10 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1320},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":54076,"byte_end":54092,"line_start":1032,"line_end":1032,"column_start":12,"column_end":28},"name":"ISO_8859_13_INIT","qualname":"::ISO_8859_13_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-13](static.ISO_8859_13.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1322},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":54912,"byte_end":54923,"line_start":1052,"line_end":1052,"column_start":12,"column_end":23},"name":"ISO_8859_13","qualname":"::ISO_8859_13","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-13 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1324},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":55567,"byte_end":55583,"line_start":1066,"line_end":1066,"column_start":12,"column_end":28},"name":"ISO_8859_14_INIT","qualname":"::ISO_8859_14_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-14](static.ISO_8859_14.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1326},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56377,"byte_end":56388,"line_start":1086,"line_end":1086,"column_start":12,"column_end":23},"name":"ISO_8859_14","qualname":"::ISO_8859_14","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-14 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1328},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":57032,"byte_end":57048,"line_start":1100,"line_end":1100,"column_start":12,"column_end":28},"name":"ISO_8859_15_INIT","qualname":"::ISO_8859_15_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-15](static.ISO_8859_15.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1330},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":57801,"byte_end":57812,"line_start":1119,"line_end":1119,"column_start":12,"column_end":23},"name":"ISO_8859_15","qualname":"::ISO_8859_15","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-15 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1332},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58456,"byte_end":58472,"line_start":1133,"line_end":1133,"column_start":12,"column_end":28},"name":"ISO_8859_16_INIT","qualname":"::ISO_8859_16_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-16](static.ISO_8859_16.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1334},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":59282,"byte_end":59293,"line_start":1153,"line_end":1153,"column_start":12,"column_end":23},"name":"ISO_8859_16","qualname":"::ISO_8859_16","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-16 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1336},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":59935,"byte_end":59950,"line_start":1167,"line_end":1167,"column_start":12,"column_end":27},"name":"ISO_8859_2_INIT","qualname":"::ISO_8859_2_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-2](static.ISO_8859_2.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1338},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":60685,"byte_end":60695,"line_start":1185,"line_end":1185,"column_start":12,"column_end":22},"name":"ISO_8859_2","qualname":"::ISO_8859_2","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-2 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1340},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":61336,"byte_end":61351,"line_start":1199,"line_end":1199,"column_start":12,"column_end":27},"name":"ISO_8859_3_INIT","qualname":"::ISO_8859_3_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-3](static.ISO_8859_3.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1342},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":62084,"byte_end":62094,"line_start":1217,"line_end":1217,"column_start":12,"column_end":22},"name":"ISO_8859_3","qualname":"::ISO_8859_3","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-3 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1344},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":62735,"byte_end":62750,"line_start":1231,"line_end":1231,"column_start":12,"column_end":27},"name":"ISO_8859_4_INIT","qualname":"::ISO_8859_4_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-4](static.ISO_8859_4.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1346},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":63483,"byte_end":63493,"line_start":1249,"line_end":1249,"column_start":12,"column_end":22},"name":"ISO_8859_4","qualname":"::ISO_8859_4","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-4 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1348},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":64134,"byte_end":64149,"line_start":1263,"line_end":1263,"column_start":12,"column_end":27},"name":"ISO_8859_5_INIT","qualname":"::ISO_8859_5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-5](static.ISO_8859_5.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1350},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":64837,"byte_end":64847,"line_start":1281,"line_end":1281,"column_start":12,"column_end":22},"name":"ISO_8859_5","qualname":"::ISO_8859_5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1352},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":65488,"byte_end":65503,"line_start":1295,"line_end":1295,"column_start":12,"column_end":27},"name":"ISO_8859_6_INIT","qualname":"::ISO_8859_6_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-6](static.ISO_8859_6.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1354},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":66275,"byte_end":66285,"line_start":1314,"line_end":1314,"column_start":12,"column_end":22},"name":"ISO_8859_6","qualname":"::ISO_8859_6","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-6 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1356},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":66926,"byte_end":66941,"line_start":1328,"line_end":1328,"column_start":12,"column_end":27},"name":"ISO_8859_7_INIT","qualname":"::ISO_8859_7_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-7](static.ISO_8859_7.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1358},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":68027,"byte_end":68037,"line_start":1351,"line_end":1351,"column_start":12,"column_end":22},"name":"ISO_8859_7","qualname":"::ISO_8859_7","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-7 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1360},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":68678,"byte_end":68693,"line_start":1365,"line_end":1365,"column_start":12,"column_end":27},"name":"ISO_8859_8_INIT","qualname":"::ISO_8859_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-8](static.ISO_8859_8.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1362},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":69596,"byte_end":69606,"line_start":1386,"line_end":1386,"column_start":12,"column_end":22},"name":"ISO_8859_8","qualname":"::ISO_8859_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1364},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":70251,"byte_end":70268,"line_start":1400,"line_end":1400,"column_start":12,"column_end":29},"name":"ISO_8859_8_I_INIT","qualname":"::ISO_8859_8_I_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-8-I](static.ISO_8859_8_I.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1366},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":71176,"byte_end":71188,"line_start":1421,"line_end":1421,"column_start":12,"column_end":24},"name":"ISO_8859_8_I","qualname":"::ISO_8859_8_I","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8-I encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1368},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":71823,"byte_end":71834,"line_start":1435,"line_end":1435,"column_start":12,"column_end":23},"name":"KOI8_R_INIT","qualname":"::KOI8_R_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [KOI8-R](static.KOI8_R.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1370},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":72524,"byte_end":72530,"line_start":1453,"line_end":1453,"column_start":12,"column_end":18},"name":"KOI8_R","qualname":"::KOI8_R","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-R encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1372},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":73159,"byte_end":73170,"line_start":1467,"line_end":1467,"column_start":12,"column_end":23},"name":"KOI8_U_INIT","qualname":"::KOI8_U_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [KOI8-U](static.KOI8_U.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1374},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":73829,"byte_end":73835,"line_start":1485,"line_end":1485,"column_start":12,"column_end":18},"name":"KOI8_U","qualname":"::KOI8_U","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-U encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1376},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":74470,"byte_end":74484,"line_start":1499,"line_end":1499,"column_start":12,"column_end":26},"name":"SHIFT_JIS_INIT","qualname":"::SHIFT_JIS_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [Shift_JIS](static.SHIFT_JIS.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1378},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":75294,"byte_end":75303,"line_start":1519,"line_end":1519,"column_start":12,"column_end":21},"name":"SHIFT_JIS","qualname":"::SHIFT_JIS","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Shift_JIS encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1380},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":75939,"byte_end":75952,"line_start":1533,"line_end":1533,"column_start":12,"column_end":25},"name":"UTF_16BE_INIT","qualname":"::UTF_16BE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-16BE](static.UTF_16BE.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1382},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":76684,"byte_end":76692,"line_start":1553,"line_end":1553,"column_start":12,"column_end":20},"name":"UTF_16BE","qualname":"::UTF_16BE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16BE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1384},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":77327,"byte_end":77340,"line_start":1567,"line_end":1567,"column_start":12,"column_end":25},"name":"UTF_16LE_INIT","qualname":"::UTF_16LE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-16LE](static.UTF_16LE.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1386},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":78075,"byte_end":78083,"line_start":1587,"line_end":1587,"column_start":12,"column_end":20},"name":"UTF_16LE","qualname":"::UTF_16LE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16LE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1388},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":78712,"byte_end":78722,"line_start":1601,"line_end":1601,"column_start":12,"column_end":22},"name":"UTF_8_INIT","qualname":"::UTF_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-8](static.UTF_8.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1390},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":79306,"byte_end":79311,"line_start":1618,"line_end":1618,"column_start":12,"column_end":17},"name":"UTF_8","qualname":"::UTF_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1392},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":79941,"byte_end":79953,"line_start":1632,"line_end":1632,"column_start":12,"column_end":24},"name":"GB18030_INIT","qualname":"::GB18030_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [gb18030](static.GB18030.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1394},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":80807,"byte_end":80814,"line_start":1653,"line_end":1653,"column_start":12,"column_end":19},"name":"GB18030","qualname":"::GB18030","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The gb18030 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1396},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":81450,"byte_end":81464,"line_start":1667,"line_end":1667,"column_start":12,"column_end":26},"name":"MACINTOSH_INIT","qualname":"::MACINTOSH_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [macintosh](static.MACINTOSH.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1398},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":82232,"byte_end":82241,"line_start":1686,"line_end":1686,"column_start":12,"column_end":21},"name":"MACINTOSH","qualname":"::MACINTOSH","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The macintosh encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1400},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":82883,"byte_end":82899,"line_start":1700,"line_end":1700,"column_start":12,"column_end":28},"name":"REPLACEMENT_INIT","qualname":"::REPLACEMENT_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [replacement](static.REPLACEMENT.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1402},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":83740,"byte_end":83751,"line_start":1722,"line_end":1722,"column_start":12,"column_end":23},"name":"REPLACEMENT","qualname":"::REPLACEMENT","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The replacement encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1404},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":84397,"byte_end":84414,"line_start":1736,"line_end":1736,"column_start":12,"column_end":29},"name":"WINDOWS_1250_INIT","qualname":"::WINDOWS_1250_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1250](static.WINDOWS_1250.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1406},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":85098,"byte_end":85110,"line_start":1754,"line_end":1754,"column_start":12,"column_end":24},"name":"WINDOWS_1250","qualname":"::WINDOWS_1250","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1250 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1408},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":85757,"byte_end":85774,"line_start":1768,"line_end":1768,"column_start":12,"column_end":29},"name":"WINDOWS_1251_INIT","qualname":"::WINDOWS_1251_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1251](static.WINDOWS_1251.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1410},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":86451,"byte_end":86463,"line_start":1786,"line_end":1786,"column_start":12,"column_end":24},"name":"WINDOWS_1251","qualname":"::WINDOWS_1251","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1251 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1412},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":87110,"byte_end":87127,"line_start":1800,"line_end":1800,"column_start":12,"column_end":29},"name":"WINDOWS_1252_INIT","qualname":"::WINDOWS_1252_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1252](static.WINDOWS_1252.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1414},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":87868,"byte_end":87880,"line_start":1819,"line_end":1819,"column_start":12,"column_end":24},"name":"WINDOWS_1252","qualname":"::WINDOWS_1252","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1252 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1416},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":88527,"byte_end":88544,"line_start":1833,"line_end":1833,"column_start":12,"column_end":29},"name":"WINDOWS_1253_INIT","qualname":"::WINDOWS_1253_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1253](static.WINDOWS_1253.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1418},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":89391,"byte_end":89403,"line_start":1853,"line_end":1853,"column_start":12,"column_end":24},"name":"WINDOWS_1253","qualname":"::WINDOWS_1253","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1253 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1420},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":90050,"byte_end":90067,"line_start":1867,"line_end":1867,"column_start":12,"column_end":29},"name":"WINDOWS_1254_INIT","qualname":"::WINDOWS_1254_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1254](static.WINDOWS_1254.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1422},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":90808,"byte_end":90820,"line_start":1886,"line_end":1886,"column_start":12,"column_end":24},"name":"WINDOWS_1254","qualname":"::WINDOWS_1254","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1254 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1424},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":91467,"byte_end":91484,"line_start":1900,"line_end":1900,"column_start":12,"column_end":29},"name":"WINDOWS_1255_INIT","qualname":"::WINDOWS_1255_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1255](static.WINDOWS_1255.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1426},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":92318,"byte_end":92330,"line_start":1920,"line_end":1920,"column_start":12,"column_end":24},"name":"WINDOWS_1255","qualname":"::WINDOWS_1255","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1255 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1428},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":92977,"byte_end":92994,"line_start":1934,"line_end":1934,"column_start":12,"column_end":29},"name":"WINDOWS_1256_INIT","qualname":"::WINDOWS_1256_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1256](static.WINDOWS_1256.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1430},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":93669,"byte_end":93681,"line_start":1952,"line_end":1952,"column_start":12,"column_end":24},"name":"WINDOWS_1256","qualname":"::WINDOWS_1256","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1256 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1432},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":94328,"byte_end":94345,"line_start":1966,"line_end":1966,"column_start":12,"column_end":29},"name":"WINDOWS_1257_INIT","qualname":"::WINDOWS_1257_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1257](static.WINDOWS_1257.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1434},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":95105,"byte_end":95117,"line_start":1985,"line_end":1985,"column_start":12,"column_end":24},"name":"WINDOWS_1257","qualname":"::WINDOWS_1257","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1257 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1436},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":95764,"byte_end":95781,"line_start":1999,"line_end":1999,"column_start":12,"column_end":29},"name":"WINDOWS_1258_INIT","qualname":"::WINDOWS_1258_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1258](static.WINDOWS_1258.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1438},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":96843,"byte_end":96855,"line_start":2022,"line_end":2022,"column_start":12,"column_end":24},"name":"WINDOWS_1258","qualname":"::WINDOWS_1258","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1258 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1440},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":97500,"byte_end":97516,"line_start":2036,"line_end":2036,"column_start":12,"column_end":28},"name":"WINDOWS_874_INIT","qualname":"::WINDOWS_874_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-874](static.WINDOWS_874.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1442},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":98314,"byte_end":98325,"line_start":2055,"line_end":2055,"column_start":12,"column_end":23},"name":"WINDOWS_874","qualname":"::WINDOWS_874","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-874 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1444},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":98975,"byte_end":98994,"line_start":2069,"line_end":2069,"column_start":12,"column_end":31},"name":"X_MAC_CYRILLIC_INIT","qualname":"::X_MAC_CYRILLIC_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [x-mac-cyrillic](static.X_MAC_CYRILLIC.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1446},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":99694,"byte_end":99708,"line_start":2087,"line_end":2087,"column_start":12,"column_end":26},"name":"X_MAC_CYRILLIC","qualname":"::X_MAC_CYRILLIC","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-mac-cyrillic encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1448},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":100361,"byte_end":100380,"line_start":2101,"line_end":2101,"column_start":12,"column_end":31},"name":"X_USER_DEFINED_INIT","qualname":"::X_USER_DEFINED_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [x-user-defined](static.X_USER_DEFINED.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1450},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":101060,"byte_end":101074,"line_start":2119,"line_end":2119,"column_start":12,"column_end":26},"name":"X_USER_DEFINED","qualname":"::X_USER_DEFINED","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-user-defined encoding.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1456},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":112762,"byte_end":112770,"line_start":2629,"line_end":2629,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::Encoding","value":"Encoding {  }","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":767}],"decl_id":null,"docs":" An encoding as defined in the [Encoding Standard][1].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113926,"byte_end":113935,"line_start":2656,"line_end":2656,"column_start":12,"column_end":21},"name":"for_label","qualname":"<Encoding>::for_label","value":"fn (label: &[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" Implements the\n [_get an encoding_](https://encoding.spec.whatwg.org/#concept-encoding-get)\n algorithm.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":118637,"byte_end":118661,"line_start":2778,"line_end":2778,"column_start":12,"column_end":36},"name":"for_label_no_replacement","qualname":"<Encoding>::for_label_no_replacement","value":"fn (label: &[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" This method behaves the same as `for_label()`, except when `for_label()`\n would return `Some(REPLACEMENT)`, this method returns `None` instead.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":118616,"byte_end":118625,"line_start":2777,"line_end":2777,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":119517,"byte_end":119524,"line_start":2803,"line_end":2803,"column_start":12,"column_end":19},"name":"for_bom","qualname":"<Encoding>::for_bom","value":"fn (buffer: &[u8]) -> Option<(&'static Encoding, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Performs non-incremental BOM sniffing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":119496,"byte_end":119505,"line_start":2802,"line_end":2802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120102,"byte_end":120106,"line_start":2822,"line_end":2822,"column_start":12,"column_end":16},"name":"name","qualname":"<Encoding>::name","value":"fn (&'static self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120081,"byte_end":120090,"line_start":2821,"line_end":2821,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120375,"byte_end":120396,"line_start":2831,"line_end":2831,"column_start":12,"column_end":33},"name":"can_encode_everything","qualname":"<Encoding>::can_encode_everything","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the _output encoding_ of this encoding can encode every\n `char`. (Only true if the output encoding is UTF-8.)","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120354,"byte_end":120363,"line_start":2830,"line_end":2830,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120658,"byte_end":120677,"line_start":2840,"line_end":2840,"column_start":12,"column_end":31},"name":"is_ascii_compatible","qualname":"<Encoding>::is_ascii_compatible","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the bytes 0x00...0x7F map exclusively to the characters\n U+0000...U+007F and vice versa.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120637,"byte_end":120646,"line_start":2839,"line_end":2839,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":121275,"byte_end":121289,"line_start":2854,"line_end":2854,"column_start":12,"column_end":26},"name":"is_single_byte","qualname":"<Encoding>::is_single_byte","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this encoding maps one byte to one Basic Multilingual\n Plane code point (i.e. byte length equals decoded UTF-16 length) and\n vice versa (for mappable characters).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":121254,"byte_end":121263,"line_start":2853,"line_end":2853,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":121846,"byte_end":121861,"line_start":2870,"line_end":2870,"column_start":12,"column_end":27},"name":"output_encoding","qualname":"<Encoding>::output_encoding","value":"fn (&'static self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" Returns the _output encoding_ of this encoding. This is UTF-8 for\n UTF-16BE, UTF-16LE and replacement and the encoding itself otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":121825,"byte_end":121834,"line_start":2869,"line_end":2869,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":123822,"byte_end":123828,"line_start":2913,"line_end":2913,"column_start":12,"column_end":18},"name":"decode","qualname":"<Encoding>::decode","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM sniffing_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":123801,"byte_end":123810,"line_start":2912,"line_end":2912,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":125917,"byte_end":125940,"line_start":2956,"line_end":2956,"column_start":12,"column_end":35},"name":"decode_with_bom_removal","qualname":"<Encoding>::decode_with_bom_removal","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM removal_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":125896,"byte_end":125905,"line_start":2955,"line_end":2955,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":128094,"byte_end":128121,"line_start":3002,"line_end":3002,"column_start":12,"column_end":39},"name":"decode_without_bom_handling","qualname":"<Encoding>::decode_without_bom_handling","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n with malformed sequences replaced with the REPLACEMENT CHARACTER when\n the entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":132441,"byte_end":132492,"line_start":3097,"line_end":3097,"column_start":12,"column_end":63},"name":"decode_without_bom_handling_and_without_replacement","qualname":"<Encoding>::decode_without_bom_handling_and_without_replacement","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> Option<Cow<'a, str>>","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n _with malformed sequences treated as fatal_ when the entire input is\n available as a single buffer (i.e. the end of the buffer marks the end\n of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":136670,"byte_end":136676,"line_start":3192,"line_end":3192,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoding>::encode","value":"fn <'a> (&'static self, string: &'a str) -> (Cow<'a, [u8]>, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Encode complete input to `Cow<'a, [u8]>` with unmappable characters\n replaced with decimal numeric character references when the entire input\n is available as a single buffer (i.e. the end of the buffer marks the\n end of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139425,"byte_end":139436,"line_start":3258,"line_end":3258,"column_start":12,"column_end":23},"name":"new_decoder","qualname":"<Encoding>::new_decoder","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM sniffing enabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139404,"byte_end":139413,"line_start":3257,"line_end":3257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":140015,"byte_end":140043,"line_start":3272,"line_end":3272,"column_start":12,"column_end":40},"name":"new_decoder_with_bom_removal","qualname":"<Encoding>::new_decoder_with_bom_removal","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM removal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139994,"byte_end":140003,"line_start":3271,"line_end":3271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":140731,"byte_end":140763,"line_start":3288,"line_end":3288,"column_start":12,"column_end":44},"name":"new_decoder_without_bom_handling","qualname":"<Encoding>::new_decoder_without_bom_handling","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM handling disabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":140710,"byte_end":140719,"line_start":3287,"line_end":3287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":141019,"byte_end":141030,"line_start":3296,"line_end":3296,"column_start":12,"column_end":23},"name":"new_encoder","qualname":"<Encoding>::new_encoder","value":"fn (&'static self) -> Encoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new encoder for the output encoding of this encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":140998,"byte_end":141007,"line_start":3295,"line_end":3295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":141603,"byte_end":141619,"line_start":3311,"line_end":3311,"column_start":12,"column_end":28},"name":"utf8_valid_up_to","qualname":"<Encoding>::utf8_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":141924,"byte_end":141941,"line_start":3321,"line_end":3321,"column_start":12,"column_end":29},"name":"ascii_valid_up_to","qualname":"<Encoding>::ascii_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ASCII.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142361,"byte_end":142390,"line_start":3333,"line_end":3333,"column_start":12,"column_end":41},"name":"iso_2022_jp_ascii_valid_up_to","qualname":"<Encoding>::iso_2022_jp_ascii_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ISO-2022-JP ASCII-state data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":855},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":145766,"byte_end":145776,"line_start":3455,"line_end":3455,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::CoderResult::InputEmpty","value":"CoderResult::InputEmpty","parent":{"krate":0,"index":1794},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":857},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146046,"byte_end":146056,"line_start":3462,"line_end":3462,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::CoderResult::OutputFull","value":"CoderResult::OutputFull","parent":{"krate":0,"index":1794},"children":[],"decl_id":null,"docs":" The converter cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1794},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":145497,"byte_end":145508,"line_start":3449,"line_end":3449,"column_start":10,"column_end":21},"name":"CoderResult","qualname":"::CoderResult","value":"CoderResult::{InputEmpty, OutputFull}","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":857}],"decl_id":null,"docs":" Result of a (potentially partial) decode or encode operation with\n replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":145444,"byte_end":145455,"line_start":3447,"line_end":3447,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":145488,"byte_end":146059,"line_start":3449,"line_end":3463,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146449,"byte_end":146459,"line_start":3474,"line_end":3474,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::DecoderResult::InputEmpty","value":"DecoderResult::InputEmpty","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146725,"byte_end":146735,"line_start":3481,"line_end":3481,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::DecoderResult::OutputFull","value":"DecoderResult::OutputFull","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" The decoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":863},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":147643,"byte_end":147652,"line_start":3499,"line_end":3499,"column_start":5,"column_end":14},"name":"Malformed","qualname":"::DecoderResult::Malformed","value":"DecoderResult::Malformed(u8, u8)","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" The decoder encountered a malformed byte sequence.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1808},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146190,"byte_end":146203,"line_start":3468,"line_end":3468,"column_start":10,"column_end":23},"name":"DecoderResult","qualname":"::DecoderResult","value":"DecoderResult::{InputEmpty, OutputFull, Malformed}","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":863}],"decl_id":null,"docs":" Result of a (potentially partial) decode operation without replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146137,"byte_end":146148,"line_start":3466,"line_end":3466,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146181,"byte_end":147709,"line_start":3468,"line_end":3500,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1518},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":152884,"byte_end":152891,"line_start":3599,"line_end":3599,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789}],"decl_id":null,"docs":" A converter that decodes a byte stream into Unicode according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":154076,"byte_end":154084,"line_start":3635,"line_end":3635,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Decoder>::encoding","value":"fn (&self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Decoder` is for.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":154055,"byte_end":154064,"line_start":3634,"line_end":3634,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":154630,"byte_end":154652,"line_start":3648,"line_end":3648,"column_start":12,"column_end":34},"name":"max_utf8_buffer_length","qualname":"<Decoder>::max_utf8_buffer_length","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _with replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":159564,"byte_end":159606,"line_start":3738,"line_end":3738,"column_start":12,"column_end":54},"name":"max_utf8_buffer_length_without_replacement","qualname":"<Decoder>::max_utf8_buffer_length_without_replacement","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":164489,"byte_end":164503,"line_start":3831,"line_end":3831,"column_start":12,"column_end":26},"name":"decode_to_utf8","qualname":"<Decoder>::decode_to_utf8","value":"fn (&mut self, src: &[u8], dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":166889,"byte_end":166902,"line_start":3894,"line_end":3894,"column_start":12,"column_end":25},"name":"decode_to_str","qualname":"<Decoder>::decode_to_str","value":"fn (&mut self, src: &[u8], dst: &mut str, last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":168737,"byte_end":168753,"line_start":3938,"line_end":3938,"column_start":12,"column_end":28},"name":"decode_to_string","qualname":"<Decoder>::decode_to_string","value":"fn (&mut self, src: &[u8], dst: &mut String, last: bool) -> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER using a `String` receiver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":169772,"byte_end":169806,"line_start":3965,"line_end":3965,"column_start":29,"column_end":63},"name":"decode_to_utf8_without_replacement","qualname":"<Decoder>::decode_to_utf8_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut [u8], last: bool) -> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8\n _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":170664,"byte_end":170697,"line_start":3984,"line_end":3984,"column_start":12,"column_end":45},"name":"decode_to_str_without_replacement","qualname":"<Decoder>::decode_to_str_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut str, last: bool) -> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":172393,"byte_end":172429,"line_start":4026,"line_end":4026,"column_start":12,"column_end":48},"name":"decode_to_string_without_replacement","qualname":"<Decoder>::decode_to_string_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut String, last: bool) -> (DecoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 using a `String` receiver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":173510,"byte_end":173533,"line_start":4056,"line_end":4056,"column_start":12,"column_end":35},"name":"max_utf16_buffer_length","qualname":"<Decoder>::max_utf16_buffer_length","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-16 output size (with or without replacement).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":178043,"byte_end":178058,"line_start":4139,"line_end":4139,"column_start":12,"column_end":27},"name":"decode_to_utf16","qualname":"<Decoder>::decode_to_utf16","value":"fn (&mut self, src: &[u8], dst: &mut [u16], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-16 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180047,"byte_end":180082,"line_start":4193,"line_end":4193,"column_start":29,"column_end":64},"name":"decode_to_utf16_without_replacement","qualname":"<Decoder>::decode_to_utf16_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut [u16], last: bool) -> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-16\n _without replacement_.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":869},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180835,"byte_end":180845,"line_start":4211,"line_end":4211,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::EncoderResult::InputEmpty","value":"EncoderResult::InputEmpty","parent":{"krate":0,"index":1844},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":871},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181111,"byte_end":181121,"line_start":4218,"line_end":4218,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::EncoderResult::OutputFull","value":"EncoderResult::OutputFull","parent":{"krate":0,"index":1844},"children":[],"decl_id":null,"docs":" The encoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":873},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181364,"byte_end":181374,"line_start":4225,"line_end":4225,"column_start":5,"column_end":15},"name":"Unmappable","qualname":"::EncoderResult::Unmappable","value":"EncoderResult::Unmappable(char)","parent":{"krate":0,"index":1844},"children":[],"decl_id":null,"docs":" The encoder encountered an unmappable character.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1844},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180576,"byte_end":180589,"line_start":4205,"line_end":4205,"column_start":10,"column_end":23},"name":"EncoderResult","qualname":"::EncoderResult","value":"EncoderResult::{InputEmpty, OutputFull, Unmappable}","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":873}],"decl_id":null,"docs":" Result of a (potentially partial) encode operation without replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180523,"byte_end":180534,"line_start":4203,"line_end":4203,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180567,"byte_end":181383,"line_start":4205,"line_end":4226,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1548},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":187822,"byte_end":187829,"line_start":4344,"line_end":4344,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":793}],"decl_id":null,"docs":" A converter that encodes a Unicode stream into bytes according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188148,"byte_end":188156,"line_start":4359,"line_end":4359,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Encoder>::encoding","value":"fn (&self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Encoder` is for.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188127,"byte_end":188136,"line_start":4358,"line_end":4358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188359,"byte_end":188376,"line_start":4366,"line_end":4366,"column_start":12,"column_end":29},"name":"has_pending_state","qualname":"<Encoder>::has_pending_state","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is an ISO-2022-JP encoder that's not in the\n ASCII state and `false` otherwise.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188338,"byte_end":188347,"line_start":4365,"line_end":4365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188883,"byte_end":188928,"line_start":4379,"line_end":4379,"column_start":12,"column_end":57},"name":"max_buffer_length_from_utf8_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf8_if_no_unmappables","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 with\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":189637,"byte_end":189684,"line_start":4401,"line_end":4401,"column_start":12,"column_end":59},"name":"max_buffer_length_from_utf8_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf8_without_replacement","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 without\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":190178,"byte_end":190194,"line_start":4416,"line_end":4416,"column_start":12,"column_end":28},"name":"encode_from_utf8","qualname":"<Encoder>::encode_from_utf8","value":"fn (&mut self, src: &str, dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":193417,"byte_end":193440,"line_start":4498,"line_end":4498,"column_start":12,"column_end":35},"name":"encode_from_utf8_to_vec","qualname":"<Encoder>::encode_from_utf8_to_vec","value":"fn (&mut self, src: &str, dst: &mut Vec<u8>, last: bool) -> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":194169,"byte_end":194205,"line_start":4521,"line_end":4521,"column_start":12,"column_end":48},"name":"encode_from_utf8_without_replacement","qualname":"<Encoder>::encode_from_utf8_without_replacement","value":"fn (&mut self, src: &str, dst: &mut [u8], last: bool) -> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":194641,"byte_end":194684,"line_start":4536,"line_end":4536,"column_start":12,"column_end":55},"name":"encode_from_utf8_to_vec_without_replacement","qualname":"<Encoder>::encode_from_utf8_to_vec_without_replacement","value":"fn (&mut self, src: &str, dst: &mut Vec<u8>, last: bool) -> (EncoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":195599,"byte_end":195645,"line_start":4562,"line_end":4562,"column_start":12,"column_end":58},"name":"max_buffer_length_from_utf16_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf16_if_no_unmappables","value":"fn (&self, u16_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 with\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":196353,"byte_end":196401,"line_start":4584,"line_end":4584,"column_start":12,"column_end":60},"name":"max_buffer_length_from_utf16_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf16_without_replacement","value":"fn (&self, u16_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 without\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":196895,"byte_end":196912,"line_start":4599,"line_end":4599,"column_start":12,"column_end":29},"name":"encode_from_utf16","qualname":"<Encoder>::encode_from_utf16","value":"fn (&mut self, src: &[u16], dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":200490,"byte_end":200527,"line_start":4686,"line_end":4686,"column_start":12,"column_end":49},"name":"encode_from_utf16_without_replacement","qualname":"<Encoder>::encode_from_utf16_without_replacement","value":"fn (&mut self, src: &[u16], dst: &mut [u8], last: bool) -> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 _without replacement_.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":307956,"byte_end":307967,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":1604},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":313855,"byte_end":313866,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":1608},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":322987,"byte_end":322999,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":323488,"byte_end":323500,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":1612},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":331519,"byte_end":331531,"line_start":249,"line_end":249,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":1616},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":340325,"byte_end":340337,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":1620},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":351929,"byte_end":351941,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":1624},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":357581,"byte_end":357595,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":358146,"byte_end":358160,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":1628},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":374909,"byte_end":374923,"line_start":436,"line_end":436,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":1632},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":386759,"byte_end":386775,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":1644},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":404490,"byte_end":404506,"line_start":473,"line_end":473,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":1648},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,114,101,112,108,97,99,101,109,101,110,116,46,114,115],"byte_start":431286,"byte_end":431304,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":434600,"byte_end":434615,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":1652},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":442604,"byte_end":442619,"line_start":201,"line_end":201,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":1656},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":451368,"byte_end":451385,"line_start":20,"line_end":20,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":462274,"byte_end":462291,"line_start":239,"line_end":239,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":1660},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,117,116,102,95,49,54,46,114,115],"byte_start":482990,"byte_end":483002,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":1662},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":520318,"byte_end":520329,"line_start":469,"line_end":469,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":1670},{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":525114,"byte_end":525125,"line_start":617,"line_end":617,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":549877,"byte_end":549895,"line_start":32,"line_end":32,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":1674},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":553376,"byte_end":553394,"line_start":151,"line_end":151,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":1676},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3202585,"byte_end":3202594,"line_start":73,"line_end":73,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3202795,"byte_end":3202807,"line_start":83,"line_end":83,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3203067,"byte_end":3203084,"line_start":97,"line_end":97,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3212176,"byte_end":3212186,"line_start":366,"line_end":366,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3213009,"byte_end":3213023,"line_start":403,"line_end":403,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3213600,"byte_end":3213616,"line_start":430,"line_end":430,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3214209,"byte_end":3214223,"line_start":461,"line_end":461,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3215508,"byte_end":3215525,"line_start":511,"line_end":511,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3217230,"byte_end":3217246,"line_start":573,"line_end":573,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3225450,"byte_end":3225463,"line_start":794,"line_end":794,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3226737,"byte_end":3226753,"line_start":844,"line_end":844,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3228445,"byte_end":3228460,"line_start":906,"line_end":906,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3236883,"byte_end":3236894,"line_start":1132,"line_end":1132,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3248157,"byte_end":3248172,"line_start":1378,"line_end":1378,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3249000,"byte_end":3249017,"line_start":1411,"line_end":1411,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3249595,"byte_end":3249605,"line_start":1441,"line_end":1441,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3260807,"byte_end":3260821,"line_start":1698,"line_end":1698,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3261640,"byte_end":3261656,"line_start":1731,"line_end":1731,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3262245,"byte_end":3262258,"line_start":1762,"line_end":1762,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3262780,"byte_end":3262793,"line_start":1788,"line_end":1788,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3263490,"byte_end":3263505,"line_start":1819,"line_end":1819,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3264598,"byte_end":3264612,"line_start":1860,"line_end":1860,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3265547,"byte_end":3265562,"line_start":1900,"line_end":1900,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3269337,"byte_end":3269351,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3275753,"byte_end":3275767,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3281083,"byte_end":3281098,"line_start":307,"line_end":307,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":112835,"byte_end":112843,"line_start":2634,"line_end":2634,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142489,"byte_end":142497,"line_start":3338,"line_end":3338,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142644,"byte_end":142652,"line_start":3345,"line_end":3345,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142671,"byte_end":142679,"line_start":3347,"line_end":3347,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142824,"byte_end":142832,"line_start":3354,"line_end":3354,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":152998,"byte_end":153005,"line_start":3605,"line_end":3605,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181390,"byte_end":181403,"line_start":4228,"line_end":4228,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":187902,"byte_end":187909,"line_start":4349,"line_end":4349,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41195,"byte_end":41198,"line_start":729,"line_end":729,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1172}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":307956,"byte_end":307967,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":313855,"byte_end":313866,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":322987,"byte_end":322999,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":323488,"byte_end":323500,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":331519,"byte_end":331531,"line_start":249,"line_end":249,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":340325,"byte_end":340337,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":351929,"byte_end":351941,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":357581,"byte_end":357595,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":358146,"byte_end":358160,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":374909,"byte_end":374923,"line_start":436,"line_end":436,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":386759,"byte_end":386775,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":404490,"byte_end":404506,"line_start":473,"line_end":473,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,114,101,112,108,97,99,101,109,101,110,116,46,114,115],"byte_start":431286,"byte_end":431304,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":434600,"byte_end":434615,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":442604,"byte_end":442619,"line_start":201,"line_end":201,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":451368,"byte_end":451385,"line_start":20,"line_end":20,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":462274,"byte_end":462291,"line_start":239,"line_end":239,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,117,116,102,95,49,54,46,114,115],"byte_start":482990,"byte_end":483002,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":520318,"byte_end":520329,"line_start":469,"line_end":469,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":525114,"byte_end":525125,"line_start":617,"line_end":617,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":549877,"byte_end":549895,"line_start":32,"line_end":32,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":553376,"byte_end":553394,"line_start":151,"line_end":151,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3202585,"byte_end":3202594,"line_start":73,"line_end":73,"column_start":17,"column_end":26},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":708},"to":{"krate":0,"index":704}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3202795,"byte_end":3202807,"line_start":83,"line_end":83,"column_start":17,"column_end":29},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":714},"to":{"krate":0,"index":704}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3203067,"byte_end":3203084,"line_start":97,"line_end":97,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3212176,"byte_end":3212186,"line_start":366,"line_end":366,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3213009,"byte_end":3213023,"line_start":403,"line_end":403,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3213600,"byte_end":3213616,"line_start":430,"line_end":430,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3214209,"byte_end":3214223,"line_start":461,"line_end":461,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3215508,"byte_end":3215525,"line_start":511,"line_end":511,"column_start":14,"column_end":31},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3217230,"byte_end":3217246,"line_start":573,"line_end":573,"column_start":10,"column_end":26},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3225450,"byte_end":3225463,"line_start":794,"line_end":794,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3226737,"byte_end":3226753,"line_start":844,"line_end":844,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3228445,"byte_end":3228460,"line_start":906,"line_end":906,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3236883,"byte_end":3236894,"line_start":1132,"line_end":1132,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3248157,"byte_end":3248172,"line_start":1378,"line_end":1378,"column_start":14,"column_end":29},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3249000,"byte_end":3249017,"line_start":1411,"line_end":1411,"column_start":14,"column_end":31},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3249595,"byte_end":3249605,"line_start":1441,"line_end":1441,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3260807,"byte_end":3260821,"line_start":1698,"line_end":1698,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":1008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3261640,"byte_end":3261656,"line_start":1731,"line_end":1731,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":1020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3262245,"byte_end":3262258,"line_start":1762,"line_end":1762,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":1032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3262780,"byte_end":3262793,"line_start":1788,"line_end":1788,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":1042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3263490,"byte_end":3263505,"line_start":1819,"line_end":1819,"column_start":14,"column_end":29},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3264598,"byte_end":3264612,"line_start":1860,"line_end":1860,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3265547,"byte_end":3265562,"line_start":1900,"line_end":1900,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3269337,"byte_end":3269351,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3275753,"byte_end":3275767,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3281083,"byte_end":3281098,"line_start":307,"line_end":307,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":112835,"byte_end":112843,"line_start":2634,"line_end":2634,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":1456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142489,"byte_end":142497,"line_start":3338,"line_end":3338,"column_start":20,"column_end":28},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":2362}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142644,"byte_end":142652,"line_start":3345,"line_end":3345,"column_start":13,"column_end":21},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":2368}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142671,"byte_end":142679,"line_start":3347,"line_end":3347,"column_start":15,"column_end":23},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":7630}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142824,"byte_end":142832,"line_start":3354,"line_end":3354,"column_start":26,"column_end":34},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":8064}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":152998,"byte_end":153005,"line_start":3605,"line_end":3605,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":1518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181390,"byte_end":181403,"line_start":4228,"line_end":4228,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":1844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,112,112,108,101,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":187902,"byte_end":187909,"line_start":4349,"line_end":4349,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":1548},"to":{"krate":4294967295,"index":4294967295}}]}